// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                Int               @id @default(autoincrement())
  userId            String            @unique
  userName          String
  comments          Comment[] 
  commends          Command[] 
  registreUsers     RegistreUser[]
  userChannelTimes  UserChannelTime[]
}


model RegistreUser{
  id                Int               @id @default(autoincrement())
  user              User              @relation(fields: [userId], references: [id])
  userId            Int  
  server            Server            @relation(fields: [serverId], references: [id])
  serverId          Int
  role              Role              @default(USER)
  visibility        Boolean           @default(false)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@unique(fields: [userId, serverId], name: "registreUserServerId")
}

enum Role {
  USER
  ADMIN
}


model Server{
  id                Int               @id @default(autoincrement())
  ServerId          String            @unique
  ServerName        String
  channels          Channel[]
  diarys            Diary[]
  registreUsers     RegistreUser[]
}


model Channel{
  id                Int               @id @default(autoincrement())
  channelId         String            @unique 
  channelName       String            
  channelType       Int?      
  server            Server            @relation(fields: [serverId], references: [id])
  serverId          Int
  comments          Comment[] 
  commends          Command[] 
  userChannelTimes  UserChannelTime[]
}


model Comment{
  id                Int               @id @default(autoincrement())
  commentId         String            @unique  
  user              User              @relation(fields: [userId], references: [id])
  userId            Int  
  channel           Channel           @relation(fields: [channelId], references: [id])
  channelId         Int 
  message           String
  releaseAt         DateTime          @default(now())
}


model Command{
  id                Int               @id @default(autoincrement())
  commandId         String            @unique  
  user              User              @relation(fields: [userId], references: [id])
  userId            Int 
  channel           Channel           @relation(fields: [channelId], references: [id])
  channelId         Int 
  description       String?
  releaseAt         DateTime          @default(now())
}


model Diary{
  id                Int               @id @default(autoincrement())
  diaryId           String            @unique
  server            Server            @relation(fields: [serverId], references: [id])
  serverId          Int
  amount            Int?
  createdAt         DateTime          @default(now())
}


model UserChannelTime{
  id                Int               @id @default(autoincrement())
  time              String 
  user              User              @relation(fields: [userId], references: [id])
  userId            Int 
  channel           Channel           @relation(fields: [channelId], references: [id])
  channelId         Int 
  createdAt         DateTime          @default(now())
}


model Temps{
  id                Int               @id @default(autoincrement())
  userId            String 
  channelId         String 
  statu             Boolean
  createdAt         DateTime          @default(now())
}