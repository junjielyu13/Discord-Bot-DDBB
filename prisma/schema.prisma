// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                Int               @id @default(autoincrement())
  userId            Int               @unique
  userName          String
  comments          Comment[] 
  commends          Command[] 
  registreUsers     RegistreUser[]
  userChannelTimes  UserChannelTime[]
}


model RegistreUser{
  id                Int               @id @default(autoincrement())
  user              User              @relation(fields: [userId], references: [id])
  userId            Int  
  server            Server            @relation(fields: [serverId], references: [id])
  serverId          Int
  userName          String
  role              String
  visibility        Boolean 
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}


model Server{
  id                Int               @id @default(autoincrement())
  ServerId          Int               @unique
  ServerName        String
  channels          Channel[]
  diarys            Diary[]
  registreUsers     RegistreUser[]
}

model Channel{
  id                Int               @id @default(autoincrement())
  channelId         Int               @unique 
  channelName       String            
  channelType       String
  server            Server            @relation(fields: [serverId], references: [id])
  serverId          Int
  comments          Comment[] 
  commends          Command[] 
  userChannelTimes  UserChannelTime[]

}


model Comment{
  id                Int           @id @default(autoincrement())
  commentId         Int           @unique  
  user              User          @relation(fields: [userId], references: [id])
  userId            Int  
  channel           Channel       @relation(fields: [ChannelID], references: [id])
  ChannelID         Int 
  message           String
  releaseAt         DateTime      @default(now())
}


model Command{
  id                Int           @id @default(autoincrement())
  commandId         Int           @unique  
  user              User          @relation(fields: [userId], references: [id])
  userId            Int 
  channel           Channel       @relation(fields: [ChannelID], references: [id])
  ChannelID         Int 
  description       String
  releaseAt         DateTime      @default(now())
}


model Diary{
  id                Int           @id @default(autoincrement())
  diaryId           Int           @unique
  server            Server        @relation(fields: [serverId], references: [id])
  serverId          Int
  amount            Int
  createdAt         DateTime      @default(now())
}


model UserChannelTime{
  id          Int          @id @default(autoincrement())
  time        DateTime 
  user        User         @relation(fields: [userId], references: [id])
  userId      Int 
  channel     Channel      @relation(fields: [ChannelID], references: [id])
  ChannelID   Int 
}